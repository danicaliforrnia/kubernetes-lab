name: CI/CD Pipeline with Helm

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
    - 'tema-5/node-app/**'

defaults:
 run:
  working-directory: 'tema-5/node-app'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 20.x
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'tema-5/node-app/package-lock.json'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

  push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Docker metadada
      id: metadata
      uses: docker/metadata-action@v4
      with:
        images: '${{ secrets.DOCKERHUB_USERNAME }}/node-app'
        tags: |
          type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: tema-5/node-app
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: [push]
    env:
      RELEASE: node-app-demo
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: 'Authenticate to Google Cloud'
      id: 'auth'      
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        token_format: 'access_token'

    - name: 'Connect to GKE'
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.CLUSTER }}
        location: ${{ secrets.CLUSTER_ZONE }}

    - name: 'Deploy'
      uses: 'deliverybot/helm@master'
      with:
        helm: 'helm3'
        release: $RELEASE
        namespace: 'default'
        chart: 'tema-5/leccion-10/node-chart'
        version: $GITHUB_SHA
        values: |
          image:
            tag: $GITHUB_SHA
        value-files: >-
          [
            "values.yaml"
          ]

    - name: 'Check rollout'
      run: kubectl rollout status -f deployment/$RELEASE-deployment

    - name: 'Check Service'
      run: kubectl get services -o wide
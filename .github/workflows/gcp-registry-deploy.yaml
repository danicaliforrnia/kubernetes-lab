name: GCP Registry Deployment

on:
  push:
    branches: [ master ]

defaults:
 run:
  working-directory: ./tema-5/node-app

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      node-version: 20.x
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ env.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

    - name: Build app
      run: npm run build --if-present 

  push:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set Docker metadada
      id: metadata
      uses: docker/metadata-actions@v3
      with:
        images: ${{ vars.image-name }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

    - name: 'Authenticate to Google Cloud'
      id: 'auth'      
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        token_format: 'access_token'

    - uses: 'docker/login-action@v1'
      name: 'Docker login'
      with:
        registry: '${{ var.location }}-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}